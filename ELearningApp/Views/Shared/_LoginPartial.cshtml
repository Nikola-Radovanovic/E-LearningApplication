@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right" >
        @if (User.Identity.IsAuthenticated)
        {
            <li><a asp-area="" asp-controller="Profile" asp-action="Index"> @UserManager.GetUserName(User)</a></li>
        }
        @if (!User.Identity.IsAuthenticated)
        {
            <li><a asp-area="" asp-controller="Account" asp-action="Register">Registracija</a></li>
        }
        @if (!User.Identity.IsAuthenticated)
        {
            <li><a asp-area="" asp-controller="Account" asp-action="Login">Prijava</a></li>
        }
        @if (User.Identity.IsAuthenticated)
        {
            <li><a asp-area="" asp-controller="Account" asp-action="Logout">Odjava</a></li>
        }
    </ul>
}